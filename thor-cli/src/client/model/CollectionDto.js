/**
 * Database API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CollectionOptions from './CollectionOptions';
import JsonObject from './JsonObject';
import Ttl from './Ttl';

/**
* The CollectionDto model module.
* @module model/CollectionDto
* @version 1.0.0
*/
export default class CollectionDto {
    /**
    * Constructs a new <code>CollectionDto</code>.
    * @alias module:model/CollectionDto
    * @class
    */

    constructor() {



    }

    /**
    * Constructs a <code>CollectionDto</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/CollectionDto} obj Optional instance to populate.
    * @return {module:model/CollectionDto} The populated <code>CollectionDto</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CollectionDto();


            if (data.hasOwnProperty('binaryIndices')) {
                obj['binaryIndices'] = ApiClient.convertToType(data['binaryIndices'], ['String']);
            }
            if (data.hasOwnProperty('cloneObjects')) {
                obj['cloneObjects'] = ApiClient.convertToType(data['cloneObjects'], 'Boolean');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], [JsonObject]);
            }
            if (data.hasOwnProperty('dynamicViews')) {
                obj['dynamicViews'] = ApiClient.convertToType(data['dynamicViews'], ['String']);
            }
            if (data.hasOwnProperty('exactIndices')) {
                obj['exactIndices'] = ApiClient.convertToType(data['exactIndices'], ['String']);
            }
            if (data.hasOwnProperty('idIndex')) {
                obj['idIndex'] = ApiClient.convertToType(data['idIndex'], ['Number']);
            }
            if (data.hasOwnProperty('isIncremental')) {
                obj['isIncremental'] = ApiClient.convertToType(data['isIncremental'], 'Boolean');
            }
            if (data.hasOwnProperty('maxId')) {
                obj['maxId'] = ApiClient.convertToType(data['maxId'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = CollectionOptions.constructFromObject(data['options']);
            }
            if (data.hasOwnProperty('transforms')) {
                obj['transforms'] = ApiClient.convertToType(data['transforms'], ['String']);
            }
            if (data.hasOwnProperty('ttl')) {
                obj['ttl'] = Ttl.constructFromObject(data['ttl']);
            }
            if (data.hasOwnProperty('uniqueNames')) {
                obj['uniqueNames'] = ApiClient.convertToType(data['uniqueNames'], ['String']);
            }
        }
        return obj;
    }


}
