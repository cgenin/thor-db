/**
 * Database API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The ThorOptions model module.
* @module model/ThorOptions
* @version 1.0.0
*/
export default class ThorOptions {
    /**
    * Constructs a new <code>ThorOptions</code>.
    * @alias module:model/ThorOptions
    * @class
    */

    constructor() {



    }

    /**
    * Constructs a <code>ThorOptions</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ThorOptions} obj Optional instance to populate.
    * @return {module:model/ThorOptions} The populated <code>ThorOptions</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ThorOptions();


            if (data.hasOwnProperty('adapterType')) {
                obj['adapterType'] = ApiClient.convertToType(data['adapterType'], 'String');
            }
            if (data.hasOwnProperty('autoload')) {
                obj['autoload'] = ApiClient.convertToType(data['autoload'], 'Boolean');
            }
            if (data.hasOwnProperty('autosave')) {
                obj['autosave'] = ApiClient.convertToType(data['autosave'], 'Boolean');
            }
            if (data.hasOwnProperty('autosaveInterval')) {
                obj['autosaveInterval'] = ApiClient.convertToType(data['autosaveInterval'], 'Number');
            }
            if (data.hasOwnProperty('defaultName')) {
                obj['defaultName'] = ApiClient.convertToType(data['defaultName'], 'String');
            }
            if (data.hasOwnProperty('delimited')) {
                obj['delimited'] = ApiClient.convertToType(data['delimited'], 'Boolean');
            }
            if (data.hasOwnProperty('delimiter')) {
                obj['delimiter'] = ApiClient.convertToType(data['delimiter'], 'String');
            }
            if (data.hasOwnProperty('destructureDelimiter')) {
                obj['destructureDelimiter'] = ApiClient.convertToType(data['destructureDelimiter'], 'String');
            }
            if (data.hasOwnProperty('directory')) {
                obj['directory'] = ApiClient.convertToType(data['directory'], 'String');
            }
            if (data.hasOwnProperty('extensionFile')) {
                obj['extensionFile'] = ApiClient.convertToType(data['extensionFile'], 'String');
            }
            if (data.hasOwnProperty('partitioned')) {
                obj['partitioned'] = ApiClient.convertToType(data['partitioned'], 'Boolean');
            }
            if (data.hasOwnProperty('serializationMethod')) {
                obj['serializationMethod'] = ApiClient.convertToType(data['serializationMethod'], 'String');
            }
            if (data.hasOwnProperty('throttledSaves')) {
                obj['throttledSaves'] = ApiClient.convertToType(data['throttledSaves'], 'Boolean');
            }
            if (data.hasOwnProperty('verbose')) {
                obj['verbose'] = ApiClient.convertToType(data['verbose'], 'Boolean');
            }
        }
        return obj;
    }


}
